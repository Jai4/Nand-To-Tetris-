// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load, sel = address,a = pa, b = pb, c = pc, d = pd,e = pe, f = pf, g = pg, h = ph);
    Register(in = in, load = pa, out = p0);
    Register(in = in, load = pb, out = p1);
    Register(in = in, load = pc, out = p2);
    Register(in = in, load = pd, out = p3);
    Register(in = in, load = pe, out = p4);
    Register(in = in, load = pf, out = p5);
    Register(in = in, load = pg, out = p6);
    Register(in = in, load = ph, out = p7);
    Mux8Way16(a = p0, b = p1, c = p2, d = p3, e = p4,f = p5, g = p6, h = p7, sel = address, out = out);
}